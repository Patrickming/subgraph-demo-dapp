/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  GravatarRegistry,
  GravatarRegistryInterface,
} from "../GravatarRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "displayName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "imageUrl",
        type: "string",
      },
    ],
    name: "NewGravatar",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "displayName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "imageUrl",
        type: "string",
      },
    ],
    name: "UpdatedGravatar",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_displayName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_imageUrl",
        type: "string",
      },
    ],
    name: "createGravatar",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getGravatar",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "gravatarToOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "gravatars",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "displayName",
        type: "string",
      },
      {
        internalType: "string",
        name: "imageUrl",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ownerToGravatar",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "setMythicalGravatar",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_imageUrl",
        type: "string",
      },
    ],
    name: "updateGravatarImage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_displayName",
        type: "string",
      },
    ],
    name: "updateGravatarName",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610dc4806100206000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c8063a5ac36341161005b578063a5ac363414610114578063b18588fb14610142578063cdb3344a14610155578063d5ce24ed1461016857600080fd5b806281d6e51461008c5780631d4f2c6d146100a1578063359c1f72146100a957806388d0d391146100d3575b600080fd5b61009f61009a366004610a26565b61018a565b005b61009f610297565b6100bc6100b7366004610a63565b6103a6565b6040516100ca929190610ae0565b60405180910390f35b6100fc6100e1366004610b0e565b6001602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016100ca565b610134610122366004610a63565b60026020526000908152604090205481565b6040519081526020016100ca565b61009f610150366004610a26565b61052e565b61009f610163366004610b27565b61062f565b61017b610176366004610b0e565b61079a565b6040516100ca93929190610b8b565b336000908152600260205260409020546101a357600080fd5b33600090815260026020526040812054815481106101c3576101c3610bcb565b60009182526020909120600390910201546001600160a01b031633146101e857600080fd5b336000908152600260205260408120548154909183918390811061020e5761020e610bcb565b906000526020600020906003020160020190805190602001906102329291906108ea565b507f76571b7a897a1509c641587568218a290018fbdc8b9a724f17b77ff0eec22c0c81336000848154811061026957610269610bcb565b90600052602060002090600302016001018560405161028b9493929190610cbc565b60405180910390a15050565b738d3e809fbd258083a5ba004a527159da535c8aba33146102b757600080fd5b604080516060810182526000808252825180840184526001808252600160fd1b60208084018290528086019384528651808801885283815280820192909252958501528254908101835591805282517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563600390930292830180546001600160a01b0319166001600160a01b039092169190911781559051805193949193610385937f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e564019291909101906108ea565b50604082015180516103a19160028401916020909101906108ea565b505050565b6001600160a01b0381166000908152600260205260408120548154606092839291829081106103d7576103d7610bcb565b9060005260206000209060030201600101600082815481106103fb576103fb610bcb565b906000526020600020906003020160020181805461041890610be1565b80601f016020809104026020016040519081016040528092919081815260200182805461044490610be1565b80156104915780601f1061046657610100808354040283529160200191610491565b820191906000526020600020905b81548152906001019060200180831161047457829003601f168201915b505050505091508080546104a490610be1565b80601f01602080910402602001604051908101604052809291908181526020018280546104d090610be1565b801561051d5780601f106104f25761010080835404028352916020019161051d565b820191906000526020600020905b81548152906001019060200180831161050057829003601f168201915b505050505090509250925050915091565b3360009081526002602052604090205461054757600080fd5b336000908152600260205260408120548154811061056757610567610bcb565b60009182526020909120600390910201546001600160a01b0316331461058c57600080fd5b33600090815260026020526040812054815490918391839081106105b2576105b2610bcb565b906000526020600020906003020160010190805190602001906105d69291906108ea565b507f76571b7a897a1509c641587568218a290018fbdc8b9a724f17b77ff0eec22c0c8133846000858154811061060e5761060e610bcb565b906000526020600020906003020160020160405161028b9493929190610d03565b336000908152600260205260409020541561064957600080fd5b6040805160608101825233815260208082018581529282018490526000805460018101825590805282517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563600390920291820180546001600160a01b0319166001600160a01b03909216919091178155935180519394936106f3937f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5649093019291909101906108ea565b506040820151805161070f9160028401916020909101906108ea565b50506000805490915061072490600190610d3f565b600081815260016020908152604080832080546001600160a01b0319163390811790915580845260029092529182902083905590519192507f9ab3aefb2ba6dc12910ac1bce4692cf5c3c0d06cff16327c64a3ef78228b130b9161078d91849187908790610d64565b60405180910390a1505050565b600081815481106107aa57600080fd5b6000918252602090912060039091020180546001820180546001600160a01b039092169350906107d990610be1565b80601f016020809104026020016040519081016040528092919081815260200182805461080590610be1565b80156108525780601f1061082757610100808354040283529160200191610852565b820191906000526020600020905b81548152906001019060200180831161083557829003601f168201915b50505050509080600201805461086790610be1565b80601f016020809104026020016040519081016040528092919081815260200182805461089390610be1565b80156108e05780601f106108b5576101008083540402835291602001916108e0565b820191906000526020600020905b8154815290600101906020018083116108c357829003601f168201915b5050505050905083565b8280546108f690610be1565b90600052602060002090601f016020900481019282610918576000855561095e565b82601f1061093157805160ff191683800117855561095e565b8280016001018555821561095e579182015b8281111561095e578251825591602001919060010190610943565b5061096a92915061096e565b5090565b5b8082111561096a576000815560010161096f565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126109aa57600080fd5b813567ffffffffffffffff808211156109c5576109c5610983565b604051601f8301601f19908116603f011681019082821181831017156109ed576109ed610983565b81604052838152866020858801011115610a0657600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215610a3857600080fd5b813567ffffffffffffffff811115610a4f57600080fd5b610a5b84828501610999565b949350505050565b600060208284031215610a7557600080fd5b81356001600160a01b0381168114610a8c57600080fd5b9392505050565b6000815180845260005b81811015610ab957602081850181015186830182015201610a9d565b81811115610acb576000602083870101525b50601f01601f19169290920160200192915050565b604081526000610af36040830185610a93565b8281036020840152610b058185610a93565b95945050505050565b600060208284031215610b2057600080fd5b5035919050565b60008060408385031215610b3a57600080fd5b823567ffffffffffffffff80821115610b5257600080fd5b610b5e86838701610999565b93506020850135915080821115610b7457600080fd5b50610b8185828601610999565b9150509250929050565b6001600160a01b0384168152606060208201819052600090610baf90830185610a93565b8281036040840152610bc18185610a93565b9695505050505050565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680610bf557607f821691505b60208210811415610c1657634e487b7160e01b600052602260045260246000fd5b50919050565b8054600090600181811c9080831680610c3657607f831692505b6020808410821415610c5857634e487b7160e01b600052602260045260246000fd5b83885260208801828015610c735760018114610c8457610caf565b60ff19871682528282019750610caf565b60008981526020902060005b87811015610ca957815484820152908601908401610c90565b83019850505b5050505050505092915050565b8481526001600160a01b0384166020820152608060408201819052600090610ce690830185610c1c565b8281036060840152610cf88185610a93565b979650505050505050565b8481526001600160a01b0384166020820152608060408201819052600090610d2d90830185610a93565b8281036060840152610cf88185610c1c565b600082821015610d5f57634e487b7160e01b600052601160045260246000fd5b500390565b8481526001600160a01b0384166020820152608060408201819052600090610ce690830185610a9356fea2646970667358221220bb4886745e5a985f41a525733020a32429d04d1f98d54921d61330b7045b3ef864736f6c634300080a0033";

type GravatarRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GravatarRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GravatarRegistry__factory extends ContractFactory {
  constructor(...args: GravatarRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GravatarRegistry> {
    return super.deploy(overrides || {}) as Promise<GravatarRegistry>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GravatarRegistry {
    return super.attach(address) as GravatarRegistry;
  }
  override connect(signer: Signer): GravatarRegistry__factory {
    return super.connect(signer) as GravatarRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GravatarRegistryInterface {
    return new utils.Interface(_abi) as GravatarRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GravatarRegistry {
    return new Contract(address, _abi, signerOrProvider) as GravatarRegistry;
  }
}
